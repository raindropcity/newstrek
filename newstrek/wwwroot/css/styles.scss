* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  list-style: none;
}

:root {
  // 一般模式(暗色系)
  --color-primary: #191d2b;
  --color-secondary: #178286;
  --color-white: #FFFFFF;
  --color-black: #000;
  --color-grey0: #f8f8f8;
  --color-grey-1: #dbe1e8;
  --color-grey-2: #b2becd;
  --color-grey-3: #6c7983;
  --color-grey-4: #454e56;
  --color-grey-5: #2a2e35;
  --color-grey-6: #12181b;
  --br-sm-2: 14px;
  --box-shadow-1: 0 3px 15px rgba(0, 0, 0, .3);

  // 設定body的.light-mode樣式(切換主題顏色)
  .light-mode {
    --color-primary: #FFFFFF;
    --color-secondary: #6674f5;
    --color-white: #666d72;
    --color-black: #000;
    --color-grey0: #f8f8f8;
    --color-grey-1: #6C7983;
    --color-grey-2: #6C7983;
    --color-grey-3: #6C7983;
    --color-grey-4: #454e56;
    --color-grey-5: #c1c6ca;
    --color-grey-6: #12181b;
    --br-sm-2: 14px;
    --box-shadow-1: 0 3px 15px rgba(0, 0, 0, .3);
  }
}

body {
  background-color: var(--color-primary);
  font-family: 'Poppins', sans-serif;
  font-size: 1.1rem;
  color: var(--color-white);
  // transition: 欲轉換的CSS屬性 轉換所需時間 轉換過程的速度曲線 遲延多久轉換
  transition: all .4s ease-in-out;
}

a {
  display: inline-block;
  text-decoration: none;
  color: inherit;
  font-family: inherit;
}

header {
  min-height: 100vh; // 如果是寫height，當內容高度比所設定的高度還要高時，會切掉超出部分(因為已經寫死高度)。但使用min-height的話，當內容高度小於所設定高度時，min-height還是會保持父元素的最小高度；當內容高度大於所設定高度時，則min-height不產生作用(也就是不會去切掉超出部分)
  color: var(--color-white);
  overflow: hidden; // 控制網頁捲軸，預設是auto，代表產生X Y捲軸。其他還有：
  // visible; 顯示的文字或圖片會直接超出範圍，不使用捲軸
  // hidden; 自動隱藏超出的文字或圖片
  // scroll; 自動產生捲軸
  // inherit;
}

section {
  min-height: 100vh;
  width: 100%;
  position: absolute;
  left: 0;
  top: 0;
  padding: 3rem 18rem;
}

.section {
  // transform: translateY(-100%) scale(0);
  // transition: all .4s ease-in-out;
  background-color: var(--color-primary);
  animation: slideAnim 1s ease;

  @keyframes slideAnim {
    0% {
      transform: translateY(-100%);
    }

    100% {
      transform: translateY(0);
    }
  }
}

.sec1 {
  // 注意!! 因為在Express中使用handlebars將各頁面分開來，並賦予路由，因此這邊將display: none;拿掉，如果不使用Express的話，單純只用靜態檔案(HTML、CSS、JS)則要控制display，來做出頁面轉換的效果
  // display: none;
  transform: translateY(0) scale(1);
}

.sec2 {
  // display: none;
  transform: translateY(0) scale(1);
}

.sec3 {
  // display: none;
  transform: translateY(0) scale(1);
}

.sec4 {
  // display: none;
  transform: translateY(0) scale(1);
}

.sec5 {
  // display: none;
  transform: translateY(0) scale(1);
}

.active {
  display: block;
  animation: scaleAnim 1s ease-in-out;

  @keyframes scaleAnim {
    0% {
      transform: translateY(-100%) scaleY(0);
    }

    100% {
      transform: translateY(0) scaleY(1);
    }
  }
}

//以下為右側按鈕樣式設定
//controls [SCSS可用巢狀寫法]
.controlls {
  position: fixed;
  z-index: 10;
  top: 50%;
  right: 3%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transform: translateY(-50%);

  .active-btn {
    background-color: var(--color-secondary) !important;
    transition: all .4s ease-in-out;

    i {
      color: var(--color-white) !important;
    }
  }

  .control {
    padding: 1rem;
    cursor: pointer;
    background-color: var(--color-grey-4);
    width: 55px;
    height: 55px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: .7rem 0;
    box-shadow: var(--box-shadow-1);

    i {
      font-size: 1.2rem;
      color: var(--color-grey-2);
      pointer-events: none;
    }
  }
}

//以下為home頁面樣式設定
.header-content {
  display: grid;
  grid-template-columns: 1fr 1fr; //也可以寫：repeat(2, 1fr)
  min-height: 100vh;


  .left-header {
    display: flex;
    align-items: center;
    position: relative;

    .h-shape {
      transition: all .4s ease-in-out;
      width: 65%;
      height: 100%;
      background-color: var(--color-secondary);
      position: absolute;
      left: 0;
      top: 0;
      z-index: -1;
      clip-path: polygon(0 0, 80% 0%, 100% 100%, 0% 100%);
    }

    .left-arrow {
      margin-right: -3rem;
      margin-left: 3rem;

      i {
        font-size: 1.5rem;
        cursor: pointer;
      }
    }

    .right-arrow {
      margin-left: 1rem;

      i {
        font-size: 1.5rem;
        cursor: pointer;
      }
    }

    .show-up {
      display: block;
      animation: switchAnim .5s ease-in-out;

      @keyframes switchAnim {
        0% {
          transform: translateY(-100%);
        }

        100% {
          transform: translateY(0);
        }
      }
    }

    .hidden {
      display: none;
    }

    .vocabulary {
      border-radius: 10px;
      height: 90vh;
      width: 75%;
      margin-left: 4rem;
      padding: 0 0 1.5rem 0;
      background-color: var(--color-grey-5);
      transition: all .4s ease-in-out;

      .blog {
        // position: relative;
        width: 100%;
        height: 100%;
        background-color: var(--color-grey-5);
        border-radius: 10px;
        box-shadow: 1px 1px 20px rgba(0, 0, 0, .1);
        transition: all .4s ease-in-out;
        overflow: hidden;

        h3 {
          display: flex;
          align-items: center;
          width: 100%;
          height: 5rem;
          border-radius: 10px;
          padding-left: 2rem;
        }

        .blog-text {
          // margin-top: -7px;
          padding: 1.1rem;
          border-top: 8px solid var(--color-grey-3);
          height: 95%;
          overflow: scroll;

          &::-webkit-scrollbar {
            width: 10px;
          }

          &::-webkit-scrollbar-thumb {
            background-color: var(--color-grey-4);
          }

          &::-webkit-scrollbar-corner {
            background-color: var(--color-grey-5);
          }

          h4 {
            font-size: 1.5rem;
            margin-bottom: .7rem;
            transition: all .4s ease-in-out;
          }
        }
      }
    }
  }

  .right-header {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-right: 18rem;

    .name {
      font-size: 3rem;

      span {
        color: var(--color-secondary);
      }
    }

    p {
      margin: 1.5rem 0;
      line-height: 2rem;
    }
  }
}

// home頁面：Download CV 按鈕樣式設定
// .btn-con {
//   display: flex;
//   align-self: flex-start;
// }

// .main-btn {
//   border-radius: 30px;
//   color: inherit;
//   font-weight: 600;
//   position: relative;
//   border: 1px solid var(--color-secondary);
//   display: flex;
//   align-self: flex-start;
//   align-items: center;
//   overflow: hidden;

//   .btn-text {
//     padding: 0 2rem;
//   }

//   .btn-icon {
//     background-color: var(--color-secondary);
//     display: flex;
//     align-items: center;
//     justify-content: center;
//     border-radius: 50%;
//     padding: 1rem;
//   }

//   &::before {
//     //::before是「偽元素」，會在物件內容的前方加入資料
//     content: ''; //content跟::before形影不離
//     position: absolute;
//     top: 0;
//     right: 0;
//     transform: translateX(100%); // [再看這邊!!] 滑鼠移開時，此元素從右邊開始 ease-out(緩出) 100%
//     transition: all .4s ease-out;
//     z-index: -1;
//   }

//   &:hover {

//     // [先看這邊!!] 這邊要反過來想，滑鼠過來時是預設狀態，也就是translateX(0)「尚未位移」
//     &::before {
//       width: 100%;
//       height: 100%;
//       background-color: var(--color-secondary);
//       transform: translateX(0);
//     }
//   }
// }

// 以下為about頁面樣式設定
.main-title {
  // main-title是每頁的大標題，重複使用，都用此設定
  text-align: center;

  h2 {
    font-size: 4rem;
    font-weight: 700;
    text-transform: uppercase;

    span {
      color: var(--color-secondary);
    }
  }
}

.about-container {
  display: grid;
  grid-template-columns: 1fr 1fr; //寫50% 50%; 的話右邊欄寬會固定跟左邊一樣，後續右欄往右擴充時會爆版
  padding-top: 3.5rem;
  padding-bottom: 5rem;

  .right-about {
    display: grid; //這邊直接用grid設定欄寬，就沒有另外設定width
    grid-template-columns: 1fr 1fr; //不知為何寫repeat(2, 1fr); SCSS編譯成CSS時會有問題
    grid-gap: 2rem;

    .about-item {
      border: 1px solid var(--color-grey-5);
      border-radius: 5px;
      transition: all .4s ease-in-out;
      box-shadow: 1px 2px 15px rgba(0, 0, 0, .1);

      &:hover {
        cursor: default;
        transform: translateY(-5px);
        border: 1px solid var(--color-secondary);
        box-shadow: 1px 4px 15px rgba(0, 0, 0, .32);
      }

      .abt-text {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;

        .large-text {
          font-size: 3rem;
          font-weight: 700;
          color: var(--color-secondary);
        }

        .small-text {
          padding-left: 3rem;
          position: relative;
          font-size: 1.2rem;
          color: var(--color-grey-1);
          letter-spacing: 2px;

          &::before {
            content: '';
            left: 0;
            top: 15px;
            width: 2rem;
            height: 2px;
            background-color: var(--color-grey-5);
          }
        }
      }
    }
  }

  .left-about {
    padding-right: 5rem;

    p {
      line-height: 2rem;
      padding: 1rem;
      color: var(--color-grey-1);
    }

    h4 {
      font-size: 2rem;
      text-transform: uppercase;
    }

    .highlight {
      font-size: 1.5rem;
      color: var(--color-secondary);
    }
  }
}

// about頁面下方技能條部分
.about-stats {
  padding-bottom: 4rem;

  .progress-bars {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 2rem;

    .progress-bar {
      display: flex;
      flex-direction: column;

      .prog-title {
        text-transform: uppercase;
        font-weight: 500;
      }

      .progress-con {
        display: flex;
        align-items: center;

        .prog-text {
          color: var(--color-grey-2);
        }

        .progress {
          // 技能條設定：灰色部分技能條
          width: 100%;
          height: .45rem;
          background-color: var(--color-grey-4);
          margin-left: 1rem;
          position: relative;

          span {
            // 技能條設定：綠色部分技能條。先抓span做通用設定
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            background-color: var(--color-secondary);
            transition: all .4s ease-in-out;
          }

          .html {
            // 再抓各個class name，依據每種語言個別設定熟練百分比(也就是綠色部分的span寬度)
            width: 80%;
          }

          .css3 {
            width: 80%;
          }

          .javascript {
            width: 70%;
          }

          .react {
            width: 60%;
          }

          .nodejs {
            width: 70%;
          }

          .express {
            width: 70%;
          }

          .mongodb {
            width: 70%;
          }
        }
      }
    }
  }
}

// MY SKILLS與MY TIMELINE標題樣式設定
.stat-title {
  text-transform: uppercase;
  font-size: 1.4rem;
  text-align: center;
  padding: 3.5rem 0;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 0;
    width: 40%;
    height: 1px;
    background-color: var(--color-grey-5);
    transform: translateX(-50%);
  }
}

//timeline區塊樣式設定
.timeline {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 2rem;
  padding-bottom: 3rem;

  .timeline-item {
    position: relative;
    padding-left: 3rem;
    border-left: 1px solid var(--color-grey-5);

    .tl-icon {
      position: absolute;
      left: -27px;
      top: 0;
      background-color: var(--color-secondary);
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;

      i {
        font-size: 1.3rem;
      }
    }

    .tl-duration {
      padding: .2rem .6rem;
      background-color: var(--color-grey-5);
      border-radius: 15px;
      display: inline-block;
      font-size: .8rem;
      text-transform: uppercase;
      font-weight: 500;
    }

    h5 {
      padding: 1rem 0;
      text-transform: uppercase;
      font-size: 1.3rem;
      font-weight: 600;

      span {
        color: var(--color-grey-2);
        font-weight: 500;
        font-size: 1.2rem;
      }
    }

    p {
      color: var(--color-grey-2);
    }
  }
}

// 以下為portfolio頁面樣式設定
.port-text {
  padding: 2rem 0;
  text-align: center;
}

.portfolios {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 2rem;
  margin-top: 3rem;

  .portfolio-item {
    position: relative;

    img {
      width: 100%;
      height: 300px;
      object-fit: cover; // 將可替換的元素(例如圖片、影片)尺寸撐開到跟父元素一樣
      object-position: center;
      border-radius: 15px;
    }

    .hover-items {
      width: 100%;
      height: 100%;
      background-color: var(--color-secondary);
      position: absolute;
      left: 0;
      top: 0;
      border-radius: 15px;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      opacity: 0; // 有github圖案的綠色div(也就是.hover-items)因為position: absolute的關係，是浮在project圖片上的(也就是.portfolio-item)，為了一開始先看不到.hover-items，等滑鼠hover之後再出現，因此這邊設定透明度(opacity)為0
      transform: scale(0); // 為了做滑鼠hover之後， .hover-items區塊會以「縮放」效果出現，這邊先設定scale(0)，後續設定hover的地方會給scale(1) 
      transition: all .4s ease-in-out;

      h3 {
        font-size: 1.5rem;
        color: var(--color-white);
        margin-bottom: 1.5rem;
      }

      .icons {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: var(--color-primary);
        border-radius: 50%;
        width: 50px;
        height: 50px;
        padding: 0 1rem;
        cursor: pointer;
        transition: all .4s ease-in-out;

        i {
          font-size: 1.5rem;
          color: var(--color-white);
          margin: 0 1rem;
        }

        &:hover {
          background-color: var(--color-white);

          i {
            color: var(--color-primary);
          }
        }
      }
    }
  }
}

// 設定綠色div(.hover-items)的hover效果(見第600行)
.portfolio-item:hover .hover-items {
  opacity: 1;
  transform: scale(1);
  transition: all .4s ease-in-out;
}

// 以下為blogs頁面樣式設定
// .blogs {
//   display: grid;
//   grid-template-columns: 1fr 1fr;
//   grid-gap: 2rem;
//   margin-top: 3rem;

//   .blog {
//     position: relative;
//     background-color: var(--color-grey-5);
//     border-radius: 5px;
//     box-shadow: 1px 1px 20px rgba(0, 0, 0, .1);
//     transition: all .4s ease-in-out;

//     img {
//       width: 100%;
//       height: 300px;
//       object-fit: cover;
//       border-top-left-radius: 5px; // 左上角變圓
//       border-top-right-radius: 5px;
//       filter: grayscale(100%);
//       transition: all .4s ease-in-out; // 這樣hover完之後，變回來也是0.4秒
//     }

//     &:hover {
//       box-shadow: 1px 1px 20px rgba(0, 0, 0, .3);
//       transform: translateY(-5px); // translateY 「往上」是「負的」
//       transition: all .4s ease-in-out;

//       img {
//         filter: grayscale(0);
//         transform: scale(1.1);
//         box-shadow: 1px 4px 20px rgba(0, 0, 0, .8);
//       }
//     }

//     .blog-text {
//       margin-top: -7px;
//       padding: 1.1rem;
//       border-top: 8px solid var(--color-secondary);
//       height: 50vh;
//       overflow: scroll;

//       &::-webkit-scrollbar {
//         width: 10px;
//       }

//       &::-webkit-scrollbar-thumb {
//         background-color: var(--color-grey-4);
//       }

//       &::-webkit-scrollbar-corner {
//         background-color: var(--color-grey-5);
//       }

//       a {
//         font-size: 1.5rem;
//         margin-bottom: .7rem;
//         transition: all .4s ease-in-out;
//         cursor: pointer;

//         &:hover {
//           color: var(--color-secondary);
//         }

//         p {
//           color: var(--color-grey-2);
//           line-height: 2rem;
//           padding-bottom: 1rem;
//         }
//       }
//     }
//   }
// }

// 以下為contact頁面設定
.contact-content-con {
  display: flex;
  padding-top: 3.5rem;

  .left-contact {
    flex: 2; // flex: flex-grow flex-shrink flex-basis

    h4 {
      margin-top: 1rem;
      font-size: 2rem;
      text-transform: uppercase;
    }

    p {
      margin: 1rem 0;
      line-height: 2rem;
    }

    .contact-info {
      hr {
        width: 70%;
        height: 0.7px;
        border: none;
        background-color: var(--color-grey-5);
        margin-bottom: .5rem;
        margin-left: .2rem;
      }

      .contact-item {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: space-between;

        p {
          margin: 0 !important;
          padding: 0 !important;
        }

        .icon {
          display: grid;
          grid-template-columns: 40px 1fr; // 透過統一設定第一欄為40px，讓每個icon跟後面的文字間隔是一樣的

          i {
            display: flex;
            align-items: center;
            font-size: 1.3rem;
          }
        }
      }
    }

    .contact-icons {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      margin-top: -1.5rem !important;

      .contact-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 2rem;

        a {
          display: flex;
          align-items: center;
          justify-content: center;
          color: var(--color-white);
          background-color: var(--color-grey-5);
          cursor: pointer;
          width: 50px;
          height: 50px;
          border-radius: 50%;
          margin: 0 .4rem;
          transition: all .4s ease-in-out;

          &:hover {
            background-color: var(--color-secondary);

            i {
              color: var(--color-primary);
            }
          }

          i {
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.3rem;
          }
        }
      }
    }
  }

  .right-contact {
    flex: 3; // 見第714行，當有多餘空間時，.right-contact分到剩餘空間的3/5。.left-contact分道剩餘空間的2/5。
    margin-left: 3rem;

    .input-control {
      margin: 1.5rem 0;

      span {
        color: var(--color-secondary);
        font-weight: bold;
        font-size: 2rem;
      }

      input,
      textarea {
        border-radius: 30px;
        font-weight: inherit;
        font-size: inherit;
        padding: .8rem 1.1rem;
        outline: none;
        border: none;
        background-color: var(--color-grey-5);
        width: 100%;
        color: var(--color-white);
        resize: none; // resize控制textarea如何被使用者拉大或縮小，寫none代表使用者不行手動調整textarea的大小
      }

      p {
        margin: 0;
        color: crimson;
        text-align: start;
        font-weight: bold;
        background-color: var(--color-primary);
      }
    }

    .submit-btn-div {
      border-radius: 30px;
      color: inherit;
      font-weight: 500;
      border: 1px solid var(--color-secondary);
      width: 10rem;
      height: 2.5rem;
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 6rem;

      .submit-btn {
        width: 100%;
        height: 100%;
        background-color: var(--color-secondary);
        border-radius: 30px;
        border: none;
        display: flex;
        justify-content: center;
        align-items: center;

        span {
          font-size: 1rem;
          text-transform: uppercase;
          color: var(--color-white);
          pointer-events: none;
        }

        &:hover {
          cursor: pointer;
        }
      }
    }
  }
}

// 以下為.theme-btn(切換主題顏色)的樣式
.language-btn {
  position: fixed;
  top: 5%;
  right: 3%;
  width: 70px;
  height: 70px;
  border-radius: 50%;
  background-color: var(--color-grey-4);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 3px 15px rgba(0, 0, 0, .3);
  transition: all .1s ease-in-out; // 這邊設定0.1秒的原因是，下面:active控制滑鼠點擊與釋放時的樣式變化，因為點滑鼠的速度很快(通常不會長按滑鼠)，如果秒數太長的話，滑鼠都點完了，動畫還沒跑完，因此設定很短的秒數，以立即反應跑完此按鈕的樣式動畫

  &:active {
    // 控制滑鼠「點擊」與「釋放」的樣式
    transform: translateY(-3px);
  }

  i {
    font-size: 1.7rem;
    color: var(--color-grey-2);
    pointer-events: none; // 預設為auto，若設定為none代表可以「穿透」點擊到後面的元素
  }
}

.Ch-language {
  display: none;
}

.language-hidden {
  display: none;
}

.language-show-up {
  display: inline-block;
}

/* search bar */
#search-bar {
  position: relative;
  width: 30rem;
  border-radius: .7rem;
  margin-top: 1rem;

  input,
  button {
    height: 3rem;
    font-family: var(--font-fam);
    border: 0;
    color: var(--color-primary);
    font-size: 1.8rem;
  }

  input[type="search"] {
    outline: 0;
    width: 100%;
    background: var(--color-white);
    padding: 0 1.6rem;
    border-radius: .7rem;
    appearance: none;
    transition: all .3s cubic-bezier(0, 0, 0.43, 1.49);
    transition-property: width, border-radius;
    z-index: 1;
    position: relative;
  }

  button {
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    width: 6rem;
    color: var(--color-white);
    font-weight: bold;
    background: var(--color-secondary);
    border-radius: 0 .7rem .7rem 0;
  }

  button:hover {
    cursor: pointer;
  }

  input:not(:placeholder-shown) {
    border-radius: .7rem 0 0 .7rem;
    width: calc(100% - 6rem);

    +button {
      display: block;
    }
  }

  label {
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
    padding: 0;
    border: 0;
    height: 1px;
    width: 1px;
    overflow: hidden;
  }
}

// 匯入(import)控制響應式網頁的檔案(./_media.scss)。記得要在最後引入!!
// 記得這種要被匯入的scss檔案，命名時開頭要加「下底線」
@import './media' // 並且在@import時不用寫「下底線」